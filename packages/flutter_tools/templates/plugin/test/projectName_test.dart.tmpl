import 'package:flutter_test/flutter_test.dart';
import 'package:{{projectName}}/{{projectName}}.dart';
import 'package:{{projectName}}/{{projectName}}_platform_interface.dart';
import 'package:plugin_platform_interface/plugin_platform_interface.dart';

class Mock{{pluginDartClass}}Platform 
    with MockPlatformInterfaceMixin
    implements {{pluginDartClass}}Platform {

  @override
  Future<String?> get platformVersion => Future.value('42');
}

void main() {
  late {{pluginDartClass}} {{pluginClassLowerCamelCase}};
  late Mock{{pluginDartClass}}Platform fakePlatform;
  
  setUp(() {
    fakePlatform = Mock{{pluginDartClass}}Platform();
    {{pluginDartClass}}Platform.instance = fakePlatform;
    {{pluginClassLowerCamelCase}} = {{pluginDartClass}}();
  });

  test('getPlatformVersion', () async {
    expect(await {{pluginClassLowerCamelCase}}.platformVersion, '42');
  });
}
