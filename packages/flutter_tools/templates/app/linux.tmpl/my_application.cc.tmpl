#include "my_application.h"

#include <flutter_linux/flutter_linux.h>

#include "flutter/generated_plugin_registrant.h"

struct _MyApplication {
  GtkApplication parent_instance;
};

G_DEFINE_TYPE(MyApplication, my_application, GTK_TYPE_APPLICATION)

static int my_application_command_line(GApplication* application, GApplicationCommandLine *cmd_line) {
  GtkWindow* window =
      GTK_WINDOW(gtk_application_window_new(GTK_APPLICATION(application)));
  GtkHeaderBar *header_bar = GTK_HEADER_BAR(gtk_header_bar_new());
  gtk_widget_show(GTK_WIDGET(header_bar));
  gtk_header_bar_set_title(header_bar, "{{projectName}}");
  gtk_header_bar_set_show_close_button(header_bar, TRUE);
  gtk_window_set_titlebar(window, GTK_WIDGET(header_bar));
  gtk_window_set_default_size(window, 1280, 720);
  gtk_widget_show(GTK_WIDGET(window));

  g_autoptr(FlDartProject) project = fl_dart_project_new();
  char** args = g_application_command_line_get_arguments(cmd_line, nullptr);
  // Strip out the first argument, as that is the binary name
  fl_dart_project_set_dart_entrypoint_arguments(project, ++args);

  FlView* view = fl_view_new(project);
  gtk_widget_show(GTK_WIDGET(view));
  gtk_container_add(GTK_CONTAINER(window), GTK_WIDGET(view));

  fl_register_plugins(FL_PLUGIN_REGISTRY(view));

  gtk_widget_grab_focus(GTK_WIDGET(view));

  return true;
}

static void my_application_class_init(MyApplicationClass* klass) {}

static void my_application_init(MyApplication* self) {}

MyApplication* my_application_new() {
  MyApplication* my_app = MY_APPLICATION(g_object_new(my_application_get_type(),
                                         "application-id", APPLICATION_ID,
                                         "flags", G_APPLICATION_HANDLES_COMMAND_LINE,
                                         nullptr));
  g_signal_connect(my_app, "command-line", G_CALLBACK(my_application_command_line), nullptr);
  return my_app;
}
