// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import 'package:test/test.dart';

import 'recording_canvas.dart';


class TestCase {
  const TestCase(this.value, this.expectation);
  final double value;
  final String expectation;
}

const List<TestCase> testCases = const <TestCase>[
  const TestCase(0.0, '0.0'),
  const TestCase(-0.0, '-0.0'),
  const TestCase(double.infinity, 'Infinity'),
  const TestCase(-double.infinity, '-Infinity'),
  const TestCase(double.negativeInfinity, '-Infinity'),
  const TestCase(double.nan, 'NaN'),
  const TestCase(double.maxFinite, '1.7976931e+308'),
  const TestCase(double.minPositive, '4.9406565e-324'),
  const TestCase(1.0, '1.0'),
  const TestCase(2.0, '2.0'),
  const TestCase(-2.4, '-2.4'),
  const TestCase(100.0, '100.0'),
  const TestCase(1234567890123456800.0, '1.2345679e+18'),
  const TestCase(1e-35, '1.0e-35'),
  const TestCase(123.138975987, '123.138975987'),
  const TestCase(123.1, '123.1'),
  const TestCase(123.100000001, '123.100000001'),
  const TestCase(123.1000000001, '123.1'),
  const TestCase(0.123456789, '0.123456789'),
  const TestCase(10000.0, '10000.0'),
  const TestCase(1000.0, '1000.0'),
  const TestCase(100.0, '100.0'),
  const TestCase(10.0, '10.0'),
  const TestCase(1.0, '1.0'),
  const TestCase(10000.1, '10000.1'),
  const TestCase(1000.1, '1000.1'),
  const TestCase(100.1, '100.1'),
  const TestCase(10.1, '10.1'),
  const TestCase(0.1, '0.1'),
  const TestCase(0.01, '0.01'),
  const TestCase(0.001, '0.001'),
  const TestCase(0.0001, '0.0001'),
  const TestCase(0.00001, '0.00001'),
  const TestCase(0.000001, '0.000001'),
  const TestCase(1e-7, '0.0000001'),
  const TestCase(1e-8, '0.00000001'),
  const TestCase(1e-9, '0.000000001'),
  const TestCase(1e-10, '1.0e-10'),
  const TestCase(1e-11, '1.0e-11'),
  const TestCase(1e-12, '1.0e-12'),
  const TestCase(1e-13, '1.0e-13'),
  const TestCase(1e-14, '1.0e-14'),
  const TestCase(1e-15, '1.0e-15'),
  const TestCase(0.11, '0.11'),
  const TestCase(0.101, '0.101'),
  const TestCase(0.1001, '0.1001'),
  const TestCase(0.10001, '0.10001'),
  const TestCase(0.100001, '0.100001'),
  const TestCase(0.1000001, '0.1000001'),
  const TestCase(0.10000001, '0.10000001'),
  const TestCase(0.100000001, '0.100000001'),
  const TestCase(0.1000000001, '0.1'),
  const TestCase(0.010000000001, '0.01'),
  const TestCase(0.0010000000001, '0.001'),
  const TestCase(0.00010000000001, '0.0001'),
  const TestCase(0.000010000000001, '0.00001'),
  const TestCase(0.0000010000000001, '0.000001'),
  const TestCase(1.0000000001e-7, '0.0000001'),
  const TestCase(1.0000000001e-8, '0.00000001'),
  const TestCase(1.0000000001e-9, '0.000000001'),
  const TestCase(1.0000000001e-10, '1.0e-10'),
  const TestCase(1.0000000001e-11, '1.0e-11'),
  const TestCase(1.0000000001e-12, '1.0e-12'),
  const TestCase(1.0000000001e-13, '1.0e-13'),
  const TestCase(1.0000000001e-14, '1.0e-14'),
  const TestCase(1.0000000001e-15, '1.0e-15'),
  const TestCase(1.1, '1.1'),
  const TestCase(1.01, '1.01'),
  const TestCase(1.001, '1.001'),
  const TestCase(1.0001, '1.0001'),
  const TestCase(1.00001, '1.00001'),
  const TestCase(1.000001, '1.000001'),
  const TestCase(1.0000001, '1.0000001'),
  const TestCase(1.00000001, '1.00000001'),
  const TestCase(1.000000001, '1.000000001'),
  const TestCase(1.0000000001, '1.0'),
  const TestCase(1.00000000001, '1.0'),
  const TestCase(1.000000000001, '1.0'),
  const TestCase(1.0000000000001, '1.0'),
  const TestCase(1.00000000000001, '1.0'),
  const TestCase(1.000000000000001, '1.0'),
  const TestCase(20000.2, '20000.2'),
  const TestCase(2000.2, '2000.2'),
  const TestCase(200.2, '200.2'),
  const TestCase(20.2, '20.2'),
  const TestCase(2.2, '2.2'),
  const TestCase(0.2, '0.2'),
  const TestCase(0.02, '0.02'),
  const TestCase(0.002, '0.002'),
  const TestCase(0.0002, '0.0002'),
  const TestCase(0.00002, '0.00002'),
  const TestCase(0.000002, '0.000002'),
  const TestCase(50000.5, '50000.5'),
  const TestCase(5000.5, '5000.5'),
  const TestCase(500.5, '500.5'),
  const TestCase(50.5, '50.5'),
  const TestCase(5.5, '5.5'),
  const TestCase(0.5, '0.5'),
  const TestCase(0.05, '0.05'),
  const TestCase(0.005, '0.005'),
  const TestCase(0.0005, '0.0005'),
  const TestCase(0.00005, '0.00005'),
  const TestCase(0.000005, '0.000005'),
  const TestCase(0.25, '0.25'),
  const TestCase(0.125, '0.125'),
  const TestCase(0.0009765625, '0.000976563'),
  const TestCase(123456789.0, '123456789.0'),
  const TestCase(12345678.9, '12345678.9'),
  const TestCase(1234567.89, '1234567.89'),
  const TestCase(123456.789, '123456.789'),
  const TestCase(12345.6789, '12345.6789'),
  const TestCase(1234.56789, '1234.56789'),
  const TestCase(123.456789, '123.456789'),
  const TestCase(12.3456789, '12.3456789'),
  const TestCase(1.23456789, '1.23456789'),
  const TestCase(0.123456789, '0.123456789'),
  const TestCase(0.9, '0.9'),
  const TestCase(0.89, '0.89'),
  const TestCase(0.789, '0.789'),
  const TestCase(0.6789, '0.6789'),
  const TestCase(0.56789, '0.56789'),
  const TestCase(0.456789, '0.456789'),
  const TestCase(0.3456789, '0.3456789'),
  const TestCase(0.23456789, '0.23456789'),
  const TestCase(0.123456789, '0.123456789'),
  const TestCase(1.23456789e-18, '1.2345679e-18'),
  const TestCase(1.23456789e-19, '1.2345679e-19'),
  const TestCase(1.23456789e-20, '1.2345679e-20'),
  const TestCase(1.23456789e-21, '1.2345679e-21'),
  const TestCase(1.23456789e-22, '1.2345679e-22'),
  const TestCase(1.23456789e+18, '1.2345679e+18'),
  const TestCase(1.23456789e+19, '1.2345679e+19'),
  const TestCase(1.23456789e+20, '1.2345679e+20'),
  const TestCase(1.23456789e+21, '1.2345679e+21'),
  const TestCase(1.23456789e+22, '1.2345679e+22'),
];

void main() {
  test('debug printing of doubles produces expected output', () {
    for (TestCase testCase in testCases) {
      expect(prettyDouble(testCase.value), testCase.expectation);
    }
  });
}