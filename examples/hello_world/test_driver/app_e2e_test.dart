import 'dart:io';

import 'package:flutter_driver/flutter_driver.dart';

Future<void> main() async {
  final FlutterDriver driver = await FlutterDriver.connect();

  String dataRequest =
      await driver.requestData(null, timeout: const Duration(seconds: 10));
  print('result $dataRequest');
  while (dataRequest.contains('screenshot')) {
    final List<int> screenshot = await driver.screenshot();
    print('screenshot taken');
    await saveScreenshot(
        screenshot, dataRequest.substring(dataRequest.lastIndexOf('_') + 1));
    print('screenshot saved send information to test');
    final String resultEndScreenshot = EndScreenshotDataResult.fromJson(
            await driver.sendCommand(
                EndScreenshot(null, timeout: const Duration(seconds: 10))))
        .message;
    print('screenshot end result sent: $resultEndScreenshot');
    dataRequest =
        await driver.requestData(null, timeout: const Duration(seconds: 10));
    print('result end of loop $dataRequest');
  }
  await driver.close();

  exit(dataRequest == 'pass' ? 0 : 1);
}

Future<void> saveScreenshot(List<int> screenshot, String path) async {
  final File file = File('$path.png');
  if (!file.existsSync()) {
    await file.writeAsBytes(screenshot);
  }
}

class EndScreenshot extends Command {
  /// Create a command that sends a message.
  const EndScreenshot(this.message, {Duration timeout})
      : super(timeout: timeout);

  /// Deserializes this command from the value generated by [serialize].
  EndScreenshot.deserialize(Map<String, String> params)
      : message = params['message'],
        super.deserialize(params);

  @override
  String get kind => 'end_screenshot';

  @override
  bool get requiresRootWidgetAttached => false;

  /// The message being sent from the test to the application.
  final String message;

  @override
  Map<String, String> serialize() => super.serialize()
    ..addAll(<String, String>{
      'message': message,
    });
}

class EndScreenshotDataResult extends Result {
  /// Creates a result with the given [message].
  const EndScreenshotDataResult(this.message);

  /// The text extracted by the [RequestData] command.
  final String message;

  /// Deserializes the result from JSON.
  static EndScreenshotDataResult fromJson(Map<String, dynamic> json) {
    return EndScreenshotDataResult(json['message'] as String);
  }

  @override
  Map<String, dynamic> toJson() => <String, String>{
        'message': message,
      };
}
