{"name":"dart_internal","latest":{"version":"0.2.8","pubspec":{"name":"dart_internal","version":"0.2.8","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","repository":"https://github.com/dart-lang/sdk/tree/main/pkg/dart_internal","environment":{"sdk":">=2.12.0 <3.2.0"},"dev_dependencies":{"lints":"any"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.8.tar.gz","archive_sha256":"dae3976f383beddcfcd07ad5291a422df2c8c0a8a03c52cda63ac7b4f26e0f4e","published":"2023-06-20T23:59:24.065730Z"},"versions":[{"version":"0.1.0","pubspec":{"environment":{"sdk":">=2.0.0 <2.1.0"},"homepage":"http://www.dartlang.org","version":"0.1.0","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.0.tar.gz","archive_sha256":"e5ec9c550197aeb681e1ba408ed45f39460beef20fd9b98fbb08d667dd0eb715","published":"2018-02-28T23:54:49.265572Z"},{"version":"0.1.1","pubspec":{"environment":{"sdk":">=2.0.0-dev.12.0 <2.1.0"},"homepage":"http://www.dartlang.org","version":"0.1.1","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.1.tar.gz","archive_sha256":"bcf6fa983e3e7cb72fc0918bc896f2399c9fc24882606efcae160653ba66aaa0","published":"2018-03-01T00:40:35.011476Z"},{"version":"0.1.2","pubspec":{"environment":{"sdk":">=2.0.0-dev.12.0 <2.2.0"},"homepage":"http://www.dartlang.org","version":"0.1.2","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.2.tar.gz","archive_sha256":"56d3c5d81a9696a39e9b60839af9fd99d2e5e31db4f30253cd19ec1240cf415a","published":"2018-10-15T22:48:56.605588Z"},{"version":"0.1.3","pubspec":{"environment":{"sdk":">=2.0.0-dev.12.0 <2.3.0"},"homepage":"http://www.dartlang.org","version":"0.1.3","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.3.tar.gz","archive_sha256":"363be0b9c3aea52515785715a1f26499cff711d0b9e27aefa4d945ee81ec5437","published":"2019-02-26T17:47:16.285795Z"},{"version":"0.1.4","pubspec":{"environment":{"sdk":">=2.0.0-dev.12.0 <2.4.0"},"homepage":"http://www.dartlang.org","version":"0.1.4","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.4.tar.gz","archive_sha256":"cfcb5dca22f02ad7ecc19549b99f2d68940b8ff90104bcd6e8796a7aa18ce39c","published":"2019-04-22T16:44:14.846258Z"},{"version":"0.1.5","pubspec":{"environment":{"sdk":">=2.0.0-dev.12.0 <2.5.0"},"homepage":"http://www.dartlang.org","version":"0.1.5","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.5.tar.gz","archive_sha256":"286a31ecd727975d363f308dba00fc81d8dc33a8ebbeca7e45dce9b649fb1a58","published":"2019-06-21T15:52:39.145368Z"},{"version":"0.1.6","pubspec":{"environment":{"sdk":">=2.0.0-dev.12.0 <2.6.0"},"homepage":"http://www.dartlang.org","version":"0.1.6","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.6.tar.gz","archive_sha256":"8a938ee87eca2888af0236eb0b4709033114a3ee093513b2cf989617fe3641bc","published":"2019-08-14T01:42:31.348140Z"},{"version":"0.1.7","pubspec":{"environment":{"sdk":">=2.0.0-dev.12.0 <2.7.0"},"homepage":"http://www.dartlang.org","version":"0.1.7","name":"dart_internal","author":"Dart Team <misc@dartlang.org>","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n"},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.7.tar.gz","archive_sha256":"e750f6f4c83dd077e3fc8c3b8ba1fcdb0703b8c8f3e5e322511616a4ac6dfdf8","published":"2019-09-13T23:23:53.747410Z"},{"version":"0.1.8","pubspec":{"name":"dart_internal","version":"0.1.8","author":"Dart Team <misc@dartlang.org>","homepage":"http://www.dartlang.org","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n","environment":{"sdk":">=2.0.0-dev.12.0 <2.8.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.8.tar.gz","archive_sha256":"2ccfdc519b32ba6f3baaf535614202249246cf75ddbef9c3aae8a445c5536a22","published":"2019-12-06T00:36:47.339869Z"},{"version":"0.1.9","pubspec":{"name":"dart_internal","version":"0.1.9","author":"Dart Team <misc@dartlang.org>","homepage":"http://www.dartlang.org","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n","environment":{"sdk":">=2.0.0-dev.12.0 <2.9.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.9.tar.gz","archive_sha256":"254c5a432b020b97ce57590158a0860ff8111f9816e184b5aab047f9e225523d","published":"2020-03-26T22:56:22.571295Z"},{"version":"0.1.10","pubspec":{"name":"dart_internal","version":"0.1.10","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n","environment":{"sdk":">=2.0.0 <2.10.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.10.tar.gz","archive_sha256":"96a361f5ae794092389130248b68c1d68624e2d0146d8ae5837b3f610edb6d37","published":"2020-07-30T21:11:18.414123Z"},{"version":"0.1.12-nullsafety","pubspec":{"name":"dart_internal","version":"0.1.12-nullsafety","author":"Dart Team <misc@dartlang.org>","homepage":"http://www.dartlang.org","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n","environment":{"sdk":">=2.10.0-0 <2.11.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.12-nullsafety.tar.gz","archive_sha256":"46a6a99ea54c5c02951b9a8cbbf6f82399bba626b9babfd1e7be7cbd07ceb3e7","published":"2020-09-24T16:45:11.370695Z"},{"version":"0.1.12-nullsafety.1","pubspec":{"name":"dart_internal","version":"0.1.12-nullsafety.1","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n","environment":{"sdk":">=2.10.0-0 <2.12.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.1.12-nullsafety.1.tar.gz","archive_sha256":"b5fcb5a993a437d3f35193a06f80db8d38c115a5d8dac868908f4cab2d6a75f5","published":"2020-11-02T22:33:05.661756Z"},{"version":"0.2.0","pubspec":{"name":"dart_internal","version":"0.2.0","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"\nThis is necessary in a few rare places in order to migrate existing code to Dart 2's stronger type system. Eventually, the hope is to have direct language support for solving this problem but we don't have time to get that into 2.0, so this package is provided as a temporary workaround.\nWe will very likely remove support for this in a later version of Dart.\n","environment":{"sdk":">=2.12.0-0 <2.13.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.0.tar.gz","archive_sha256":"dfa8bcd1cbadedc5739f2f8ab90a03c4804bc0adf58cb5f6fe2c77492a3abba8","published":"2021-02-23T00:49:24.556672Z"},{"version":"0.2.1","pubspec":{"name":"dart_internal","version":"0.2.1","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","environment":{"sdk":">=2.12.0 <2.15.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.1.tar.gz","archive_sha256":"603339ee673d0d7738bc6fd259bfb98784327c419b9a0ec3e6c456916c446f79","published":"2021-04-20T16:28:45.194519Z"},{"version":"0.2.2","pubspec":{"name":"dart_internal","version":"0.2.2","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","environment":{"sdk":">=2.12.0 <2.16.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.2.tar.gz","archive_sha256":"91551b3f071caf6f1455cda0b8d957632b3cafdc0e6e8d26a1545f045b84f701","published":"2021-08-12T21:35:17.854366Z"},{"version":"0.2.3","pubspec":{"name":"dart_internal","version":"0.2.3","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","environment":{"sdk":">=2.12.0 <2.17.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.3.tar.gz","archive_sha256":"e6bdd12cc1b31563630ac704003908ef825700edb650f398fe187786856b7a90","published":"2021-11-12T19:50:38.118338Z"},{"version":"0.2.4","pubspec":{"name":"dart_internal","version":"0.2.4","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","environment":{"sdk":">=2.12.0 <2.18.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.4.tar.gz","archive_sha256":"2754ca2777f57a8ae3eda7a06c40b88e83b1fa3901fa635ecf411fac12cb4f99","published":"2022-01-26T15:39:04.062983Z"},{"version":"0.2.5","pubspec":{"name":"dart_internal","version":"0.2.5","repository":"https://github.com/dart-lang/sdk/tree/master/pkg/dart_internal","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","environment":{"sdk":">=2.12.0 <2.19.0"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.5.tar.gz","archive_sha256":"3e6648bb66613931c9fc39538747ac967006c799489ea9fc9f9655f75350c408","published":"2022-04-08T13:44:08.692771Z"},{"version":"0.2.6","pubspec":{"name":"dart_internal","version":"0.2.6","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","repository":"https://github.com/dart-lang/sdk/tree/main/pkg/dart_internal","environment":{"sdk":">=2.12.0 <2.20.0"},"dev_dependencies":{"lints":"any"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.6.tar.gz","archive_sha256":"ddd00c2a49dbaedda74fdb59a90c51186ed10ed627f70de4684f077f95217856","published":"2022-07-19T09:19:20.964235Z"},{"version":"0.2.7","pubspec":{"name":"dart_internal","version":"0.2.7","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","repository":"https://github.com/dart-lang/sdk/tree/main/pkg/dart_internal","environment":{"sdk":">=2.12.0 <3.1.0"},"dev_dependencies":{"lints":"any"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.7.tar.gz","archive_sha256":"b4710e6d55e97cd1c6e13adf68c3f18114d2b666bb8c0450b9719852915ad04d","published":"2023-04-24T21:22:48.205588Z"},{"version":"0.2.8","pubspec":{"name":"dart_internal","version":"0.2.8","description":"This package is not intended for wide use. It provides a temporary API to solve the problem: \"Given an object some generic type A, how do I construct an instance of generic type B with the same type argument(s)?\"","repository":"https://github.com/dart-lang/sdk/tree/main/pkg/dart_internal","environment":{"sdk":">=2.12.0 <3.2.0"},"dev_dependencies":{"lints":"any"}},"archive_url":"https://pub.flutter-io.cn/packages/dart_internal/versions/0.2.8.tar.gz","archive_sha256":"dae3976f383beddcfcd07ad5291a422df2c8c0a8a03c52cda63ac7b4f26e0f4e","published":"2023-06-20T23:59:24.065730Z"}],"_fetchedAt":"2023-07-16T17:13:46.373250"}